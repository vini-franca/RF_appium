name: Mobile Tests Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Configurar o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Passo 3: Instalar o Poetry
      - name: Install Poetry
        run: |
          pip install poetry

      # Passo 4: Instalar dependências com Poetry
      - name: Install dependencies with Poetry
        run: |
          poetry install --no-root

      # Passo 5: Instalar o Appium
      - name: Install Appium
        run: |
          npm install -g appium

      # Passo 6: Iniciar o servidor Appium em segundo plano
      - name: Start Appium server
        run: |
          appium --log-level error --allow-insecure chromedriver_autodownload &
          sleep 10  # Espera o servidor iniciar

      # Passo 7: Verificar status do Appium
      - name: Check Appium server status
        run: |
          curl http://localhost:4723/wd/hub/status

      # Passo 8: Executar os testes com Poetry
      - name: Run tests
        run: |
          robot --outputdir results --log log.html --report report.html features/

      # Passo 9: Publicar os resultados dos testes
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: results/
