name: Mobile Tests Pipeline (Fixed)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm install -g appium@2.0.0
          npm install -g appium-doctor

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Android SDK
        run: |
          mkdir -p $ANDROID_HOME
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip sdk-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/tools
          rm sdk-tools.zip
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Verify Android tools
        run: |
          sdkmanager --version
          adb version

      - name: Accept licenses
        run: |
          yes | sdkmanager --licenses

      - name: Install Android packages
        run: |
          sdkmanager "platform-tools" "emulator" "platforms;android-30" "system-images;android-30;google_apis;x86"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" -f

      - name: Start Emulator
        run: |
          emulator -avd test -no-audio -no-window -no-snapshot -gpu swiftshader_indirect -no-accel &
          adb wait-for-device
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0
          timeout 300 bash -c 'while [[ "$(adb shell getprop sys.boot_completed | tr -d '\''\r'\'')" != "1" ]]; do sleep 5; echo "Waiting for emulator..."; done'

      - name: Start Appium
        run: |
          appium --relaxed-security --log-timestamp --local-timezone --allow-insecure chromedriver_autodownload &
          sleep 15
          curl http://localhost:4723/wd/hub/status

      - name: Run Tests
        run: |
          robot --outputdir results --log log.html --report report.html features/

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: results/
